{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicolas\\\\Desktop\\\\curso de react\\\\rursoreact\\\\src\\\\components\\\\cartContext.jsx\",\n  _s = $RefreshSig$();\n//@ts-check\n\nimport React, { useState, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const contextoGeneral = /*#__PURE__*/createContext();\nexport default function CartContext(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [carrito, setCarrito] = useState([]);\n  const [nuevoProducto, setNuevoProducto] = useState([]);\n  function addItem(ite, quantity) {\n    // agregar cierta cantidad de un ítem al carrito\n\n    let item = carrito.findIndex(product => product.id === nuevoProducto.id);\n    if (item == -1) {\n      //no existe\n      setNuevoProducto(nuevoProducto);\n      nuevoProducto.cantidad = 1;\n      //setCarrito(carrito.concat(nuevoProducto));\n      setCarrito([...carrito, item, cuantity]);\n    } else {\n      //sumar a cantidades\n      carrito[item].cantidad = carrito[item].cantidad + nuevoProducto.cantidad;\n    }\n  }\n  function removeItem() {\n    // Remover un item del cart por usando su id\n    let item;\n    item = carrito.findIndex(product => product.id === nuevoProducto.id);\n    carrito.splice(item, 1);\n\n    //const removeItem = (id) => setCart(cart.filter(product => product.id !== id));\n  }\n\n  function clear() {\n    // Remover todos los items\n    setCarrito([]);\n  }\n  function isInCart(id) {//(id) => true|false \n    //const estaenelcarro=isincart(item.id);\n  }\n  return /*#__PURE__*/_jsxDEV(contextoGeneral.Provider, {\n    value: {\n      nuevoProducto,\n      setNuevoProducto,\n      carrito,\n      setCarrito,\n      addItem,\n      removeItem,\n      clear,\n      isInCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(CartContext, \"a27rkR0frW9x6mdC5CA3oYCiwHg=\");\n_c = CartContext;\nvar _c;\n$RefreshReg$(_c, \"CartContext\");","map":{"version":3,"names":["React","useState","createContext","contextoGeneral","CartContext","children","carrito","setCarrito","nuevoProducto","setNuevoProducto","addItem","ite","quantity","item","findIndex","product","id","cantidad","cuantity","removeItem","splice","clear","isInCart"],"sources":["C:/Users/nicolas/Desktop/curso de react/rursoreact/src/components/cartContext.jsx"],"sourcesContent":["//@ts-check\r\n\r\nimport React, { useState, createContext } from \"react\";\r\n\r\nexport const contextoGeneral = createContext();\r\n\r\nexport default function CartContext({ children }) {\r\n    const [carrito, setCarrito] = useState([]);\r\n    const [nuevoProducto, setNuevoProducto] = useState( []);\r\n\r\n    function addItem(ite, quantity) { // agregar cierta cantidad de un ítem al carrito\r\n    \r\n        let item = carrito.findIndex((product) => product.id === nuevoProducto.id)\r\n        if (item == -1) {\r\n            //no existe\r\n            setNuevoProducto(nuevoProducto);\r\n            nuevoProducto.cantidad =1;\r\n            //setCarrito(carrito.concat(nuevoProducto));\r\n            setCarrito([...carrito, item, cuantity]);\r\n        } else {\r\n            //sumar a cantidades\r\n            carrito[item].cantidad = carrito[item].cantidad + nuevoProducto.cantidad;\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    function removeItem(){  // Remover un item del cart por usando su id\r\n        let item;\r\n        item = carrito.findIndex((product) => product.id === nuevoProducto.id);\r\n        carrito.splice(item, 1);\r\n\r\n        //const removeItem = (id) => setCart(cart.filter(product => product.id !== id));\r\n\r\n    }\r\n\r\n    function clear(){ // Remover todos los items\r\n        setCarrito([]);\r\n    }\r\n\r\n    function isInCart(id){ //(id) => true|false \r\n//const estaenelcarro=isincart(item.id);\r\n\r\n    }\r\n\r\n    return (\r\n        <contextoGeneral.Provider value={{ nuevoProducto, setNuevoProducto, carrito, setCarrito, addItem, removeItem, clear, isInCart }}>\r\n            {children}\r\n        </contextoGeneral.Provider>\r\n    );\r\n}"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,aAAa,QAAQ,OAAO;AAAC;AAEvD,OAAO,MAAMC,eAAe,gBAAGD,aAAa,EAAE;AAE9C,eAAe,SAASE,WAAW,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAC5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAE,EAAE,CAAC;EAEvD,SAASS,OAAO,CAACC,GAAG,EAAEC,QAAQ,EAAE;IAAE;;IAE9B,IAAIC,IAAI,GAAGP,OAAO,CAACQ,SAAS,CAAEC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKR,aAAa,CAACQ,EAAE,CAAC;IAC1E,IAAIH,IAAI,IAAI,CAAC,CAAC,EAAE;MACZ;MACAJ,gBAAgB,CAACD,aAAa,CAAC;MAC/BA,aAAa,CAACS,QAAQ,GAAE,CAAC;MACzB;MACAV,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEO,IAAI,EAAEK,QAAQ,CAAC,CAAC;IAC5C,CAAC,MAAM;MACH;MACAZ,OAAO,CAACO,IAAI,CAAC,CAACI,QAAQ,GAAGX,OAAO,CAACO,IAAI,CAAC,CAACI,QAAQ,GAAGT,aAAa,CAACS,QAAQ;IAE5E;EAEJ;EAEA,SAASE,UAAU,GAAE;IAAG;IACpB,IAAIN,IAAI;IACRA,IAAI,GAAGP,OAAO,CAACQ,SAAS,CAAEC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKR,aAAa,CAACQ,EAAE,CAAC;IACtEV,OAAO,CAACc,MAAM,CAACP,IAAI,EAAE,CAAC,CAAC;;IAEvB;EAEJ;;EAEA,SAASQ,KAAK,GAAE;IAAE;IACdd,UAAU,CAAC,EAAE,CAAC;EAClB;EAEA,SAASe,QAAQ,CAACN,EAAE,EAAC,CAAE;IAC3B;EAEI;EAEA,oBACI,QAAC,eAAe,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAER,aAAa;MAAEC,gBAAgB;MAAEH,OAAO;MAAEC,UAAU;MAAEG,OAAO;MAAES,UAAU;MAAEE,KAAK;MAAEC;IAAS,CAAE;IAAA,UAC3HjB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACc;AAEnC;AAAC,GA5CuBD,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module"}